<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dmd.admin.mapper.UmsFeedbackManagementMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.dmd.admin.model.domain.UmsProblemFeedbackBean">
        <result column="id" property="id" />
        <result column="question_name" property="questionName" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="operator" property="operator" />
    </resultMap>
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap2" type="com.dmd.admin.model.domain.UmsUserFeedbackBean">
        <result column="id" property="id" />
        <result column="problem_description" property="problemDescription" />
        <result column="user_id" property="userId" />
        <result column="picture" property="picture" />
        <result column="create_time" property="createTime" />
        <result column="problem_id" property="problemId" />
    </resultMap>

    <select id="queryProblemFeedback" resultMap="BaseResultMap">
        SELECT id,question_name,status,create_time,update_time,operator FROM dmd_problem_feedback
    </select>

    <update id="saveOrUpdateStatus" parameterType="com.dmd.admin.model.domain.UmsProblemFeedbackBean">
        UPDATE dmd_problem_feedback SET status = #{status} WHERE id = #{id}
    </update>

    <update id="updateFeedback" parameterType="com.dmd.admin.model.domain.UmsProblemFeedbackBean">
        UPDATE dmd_problem_feedback SET question_name = #{questionName},status = #{status},create_time = #{createTime}, update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <insert id="addFeedback" parameterType="com.dmd.admin.model.domain.UmsProblemFeedbackBean">
        INSERT INTO dmd_problem_feedback(
        question_name,
        status,
        create_time
        )VALUES (
        #{questionName,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <select id="queryUserFeedback" parameterType="com.dmd.admin.model.domain.UmsUserFeedbackBean" resultMap="BaseResultMap2">
        SELECT df.id,df.problem_description,df.user_id,df.picture,df.create_time,df.problem_id,dp.question_name as problemName FROM dmd_user_feedback df
        LEFT JOIN dmd_problem_feedback dp ON df.problem_id = dp.id
        <include refid="feedbackWhere"></include>
        ORDER BY df.create_time DESC
    </select>

    <!-- 公用标签 -->
    <sql id="feedbackWhere">
        <where>
            <!-- 问题描述模糊查询 -->
            <if test="problemDescription !=null and problemDescription != ''">
                and df.problem_description like '%${problemDescription}%'
            </if>
            <!-- 按照用户id -->
            <if test="userId !=null">
                and df.user_id = #{userId}
            </if>
            <!-- 日期区间查询 -->
            <if test="startTime != null">
                and df.create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and df.create_time &lt;= #{endTime}
            </if>
            <!-- 话题类型查询 -->
            <if test="problemId != null">
                and df.problem_id = #{problemId}
            </if>
        </where>
    </sql>

    <select id="queryProblemFeedbackByName" resultMap="BaseResultMap">
         SELECT id,question_name FROM dmd_problem_feedback
    </select>

    <delete id="deleteUserFeedback" parameterType="java.lang.Long">
        DELETE FROM dmd_user_feedback WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
